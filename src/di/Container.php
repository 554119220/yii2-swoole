<?php
/**
 * Created by PhpStorm.
 * User: tsingsun
 * Date: 2017/2/24
 * Time: 下午4:28
 */

namespace yii\swoole\di;

use Yii;

class Container extends \yii\di\Container
{

    /**
     * @var array 需要做快照的类,提前初始化,
     */
    protected $snapClass = [
    ];

    private $classCompatible = [
        'yii\web\Response' => 'yii\swoole\web\Response',
        'yii\web\ErrorHandler' => 'yii\swoole\web\ErrorHandle',
        'yii\log\Dispatcher' => 'yii\swoole\log\Dispatcher',
        'yii\log\Logger' => 'yii\swoole\log\Logger',
        'yii\web\Session' => 'yii\swoole\web\Session',
    ];

    protected $autoReload = false;

    public function setAutoReload($value)
    {
        $this->autoReload = $value;
    }

    public function get($class, $params = [], $config = [])
    {
        return parent::get($class, $params, $config); // TODO: Change the autogenerated stub
    }


    protected function build($class, $params, $config)
    {
        if (isset($this->classCompatible[$class])) {
            $class = $this->classCompatible[$class];
        }

//        if (!YII_DEBUG && $class && in_array($class, $this->snapClass)) {
//            /* @var $reflection \ReflectionClass */
//            list ($reflection, $dependencies) = $this->getDependencies($class);
//            if (!isset($this->snapClass[$class])) {
//                $this->snapClass[$class] = $reflection->newInstanceWithoutConstructor();
//            }
//            $object = clone $this->snapClass[$class];
//            // 如果有params参数的话, 则交给构造方法去执行
//            // 这里的逻辑貌似太简单了..
//            if ($params) {
//                $reflection->getConstructor()->invokeArgs($object, $params);
//            }
//            // 执行一些配置信息
//            Yii::configure($object, $config);
//            if (is_object($object)) {
//                $object->init();
//            }
//            return $object;
//        }

        return parent::build($class, $params, $config); // TODO: Change the autogenerated stub
    }


}